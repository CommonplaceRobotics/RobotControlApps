# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import robotcontrolapp_pb2 as robotcontrolapp__pb2


class RobotControlAppStub(object):
    """****************************************************************************

    Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecieveActions = channel.stream_stream(
                '/robotcontrolapp.RobotControlApp/RecieveActions',
                request_serializer=robotcontrolapp__pb2.AppAction.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.Event.FromString,
                )
        self.GetTCP = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/GetTCP',
                request_serializer=robotcontrolapp__pb2.GetTCPRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.Matrix44.FromString,
                )
        self.GetRobotStateStream = channel.unary_stream(
                '/robotcontrolapp.RobotControlApp/GetRobotStateStream',
                request_serializer=robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.RobotState.FromString,
                )
        self.GetRobotState = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/GetRobotState',
                request_serializer=robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.RobotState.FromString,
                )
        self.GetProgramVariables = channel.unary_stream(
                '/robotcontrolapp.RobotControlApp/GetProgramVariables',
                request_serializer=robotcontrolapp__pb2.ProgramVariablesRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.ProgramVariable.FromString,
                )
        self.SetProgramVariables = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetProgramVariables',
                request_serializer=robotcontrolapp__pb2.SetProgramVariablesRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.SetProgramVariablesResponse.FromString,
                )
        self.EnableMotors = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/EnableMotors',
                request_serializer=robotcontrolapp__pb2.EnableMotorsRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.EnableMotorsResponse.FromString,
                )
        self.ResetErrors = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/ResetErrors',
                request_serializer=robotcontrolapp__pb2.ResetErrorsRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.ResetErrorsResponse.FromString,
                )
        self.ReferenceJoints = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/ReferenceJoints',
                request_serializer=robotcontrolapp__pb2.ReferenceJointsRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.ReferenceJointsResponse.FromString,
                )
        self.GetMotionState = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/GetMotionState',
                request_serializer=robotcontrolapp__pb2.GetMotionStateRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.MotionState.FromString,
                )
        self.SetMotionInterpolator = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetMotionInterpolator',
                request_serializer=robotcontrolapp__pb2.MotionInterpolatorRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.MotionState.FromString,
                )
        self.SetLogicInterpolator = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetLogicInterpolator',
                request_serializer=robotcontrolapp__pb2.LogicInterpolatorRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.MotionState.FromString,
                )
        self.SetPositionInterface = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetPositionInterface',
                request_serializer=robotcontrolapp__pb2.PositionInterfaceRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.MotionState.FromString,
                )
        self.MoveTo = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/MoveTo',
                request_serializer=robotcontrolapp__pb2.MoveToRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.MotionState.FromString,
                )
        self.TranslateJointToCart = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/TranslateJointToCart',
                request_serializer=robotcontrolapp__pb2.JointToCartRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.JointToCartResponse.FromString,
                )
        self.TranslateCartToJoint = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/TranslateCartToJoint',
                request_serializer=robotcontrolapp__pb2.CartToJointRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.CartToJointResponse.FromString,
                )
        self.SetIOState = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetIOState',
                request_serializer=robotcontrolapp__pb2.IOStateRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.IOStateResponse.FromString,
                )
        self.UploadFile = channel.stream_unary(
                '/robotcontrolapp.RobotControlApp/UploadFile',
                request_serializer=robotcontrolapp__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.UploadFileResponse.FromString,
                )
        self.DownloadFile = channel.unary_stream(
                '/robotcontrolapp.RobotControlApp/DownloadFile',
                request_serializer=robotcontrolapp__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.DownloadFileResponse.FromString,
                )
        self.ListFiles = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/ListFiles',
                request_serializer=robotcontrolapp__pb2.ListFilesRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.ListFilesResponse.FromString,
                )
        self.RemoveFiles = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/RemoveFiles',
                request_serializer=robotcontrolapp__pb2.RemoveFilesRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.RemoveFilesResponse.FromString,
                )
        self.GetSystemInfo = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/GetSystemInfo',
                request_serializer=robotcontrolapp__pb2.SystemInfoRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.SystemInfo.FromString,
                )
        self.SetVelocityOverride = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetVelocityOverride',
                request_serializer=robotcontrolapp__pb2.SetVelocityOverrideRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.SetVelocityOverrideResponse.FromString,
                )


class RobotControlAppServicer(object):
    """****************************************************************************

    Interface exported by the server.
    """

    def RecieveActions(self, request_iterator, context):
        """Receives AppActions (see message AppAction, contains app functions and UI updates...)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTCP(self, request, context):
        """Requests the current tool center point
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotStateStream(self, request, context):
        """streams the robot state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotState(self, request, context):
        """Requests the current robot state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProgramVariables(self, request, context):
        """Requests one or more program variables
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProgramVariables(self, request, context):
        """Sets one or more program variables
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableMotors(self, request, context):
        """Resetting errors, enabling motors, referencing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetErrors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReferenceJoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMotionState(self, request, context):
        """Program / motion state
        Gets the motion source state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMotionInterpolator(self, request, context):
        """Sets the state of the motion program
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLogicInterpolator(self, request, context):
        """Sets the state of the logic program
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPositionInterface(self, request, context):
        """Sets the state of the fast position interface
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveTo(self, request, context):
        """Starts or stops a move-to command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslateJointToCart(self, request, context):
        """Kinematics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslateCartToJoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIOState(self, request, context):
        """IO
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request_iterator, context):
        """File operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemInfo(self, request, context):
        """System info
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVelocityOverride(self, request, context):
        """Velocity override
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RobotControlAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecieveActions': grpc.stream_stream_rpc_method_handler(
                    servicer.RecieveActions,
                    request_deserializer=robotcontrolapp__pb2.AppAction.FromString,
                    response_serializer=robotcontrolapp__pb2.Event.SerializeToString,
            ),
            'GetTCP': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTCP,
                    request_deserializer=robotcontrolapp__pb2.GetTCPRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.Matrix44.SerializeToString,
            ),
            'GetRobotStateStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetRobotStateStream,
                    request_deserializer=robotcontrolapp__pb2.RobotStateRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.RobotState.SerializeToString,
            ),
            'GetRobotState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotState,
                    request_deserializer=robotcontrolapp__pb2.RobotStateRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.RobotState.SerializeToString,
            ),
            'GetProgramVariables': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProgramVariables,
                    request_deserializer=robotcontrolapp__pb2.ProgramVariablesRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.ProgramVariable.SerializeToString,
            ),
            'SetProgramVariables': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProgramVariables,
                    request_deserializer=robotcontrolapp__pb2.SetProgramVariablesRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.SetProgramVariablesResponse.SerializeToString,
            ),
            'EnableMotors': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableMotors,
                    request_deserializer=robotcontrolapp__pb2.EnableMotorsRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.EnableMotorsResponse.SerializeToString,
            ),
            'ResetErrors': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetErrors,
                    request_deserializer=robotcontrolapp__pb2.ResetErrorsRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.ResetErrorsResponse.SerializeToString,
            ),
            'ReferenceJoints': grpc.unary_unary_rpc_method_handler(
                    servicer.ReferenceJoints,
                    request_deserializer=robotcontrolapp__pb2.ReferenceJointsRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.ReferenceJointsResponse.SerializeToString,
            ),
            'GetMotionState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMotionState,
                    request_deserializer=robotcontrolapp__pb2.GetMotionStateRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.MotionState.SerializeToString,
            ),
            'SetMotionInterpolator': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMotionInterpolator,
                    request_deserializer=robotcontrolapp__pb2.MotionInterpolatorRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.MotionState.SerializeToString,
            ),
            'SetLogicInterpolator': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLogicInterpolator,
                    request_deserializer=robotcontrolapp__pb2.LogicInterpolatorRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.MotionState.SerializeToString,
            ),
            'SetPositionInterface': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPositionInterface,
                    request_deserializer=robotcontrolapp__pb2.PositionInterfaceRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.MotionState.SerializeToString,
            ),
            'MoveTo': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveTo,
                    request_deserializer=robotcontrolapp__pb2.MoveToRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.MotionState.SerializeToString,
            ),
            'TranslateJointToCart': grpc.unary_unary_rpc_method_handler(
                    servicer.TranslateJointToCart,
                    request_deserializer=robotcontrolapp__pb2.JointToCartRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.JointToCartResponse.SerializeToString,
            ),
            'TranslateCartToJoint': grpc.unary_unary_rpc_method_handler(
                    servicer.TranslateCartToJoint,
                    request_deserializer=robotcontrolapp__pb2.CartToJointRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.CartToJointResponse.SerializeToString,
            ),
            'SetIOState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIOState,
                    request_deserializer=robotcontrolapp__pb2.IOStateRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.IOStateResponse.SerializeToString,
            ),
            'UploadFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=robotcontrolapp__pb2.UploadFileRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.UploadFileResponse.SerializeToString,
            ),
            'DownloadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=robotcontrolapp__pb2.DownloadFileRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.DownloadFileResponse.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=robotcontrolapp__pb2.ListFilesRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.ListFilesResponse.SerializeToString,
            ),
            'RemoveFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFiles,
                    request_deserializer=robotcontrolapp__pb2.RemoveFilesRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.RemoveFilesResponse.SerializeToString,
            ),
            'GetSystemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemInfo,
                    request_deserializer=robotcontrolapp__pb2.SystemInfoRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.SystemInfo.SerializeToString,
            ),
            'SetVelocityOverride': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVelocityOverride,
                    request_deserializer=robotcontrolapp__pb2.SetVelocityOverrideRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.SetVelocityOverrideResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'robotcontrolapp.RobotControlApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RobotControlApp(object):
    """****************************************************************************

    Interface exported by the server.
    """

    @staticmethod
    def RecieveActions(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/robotcontrolapp.RobotControlApp/RecieveActions',
            robotcontrolapp__pb2.AppAction.SerializeToString,
            robotcontrolapp__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTCP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/GetTCP',
            robotcontrolapp__pb2.GetTCPRequest.SerializeToString,
            robotcontrolapp__pb2.Matrix44.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotStateStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/robotcontrolapp.RobotControlApp/GetRobotStateStream',
            robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
            robotcontrolapp__pb2.RobotState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/GetRobotState',
            robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
            robotcontrolapp__pb2.RobotState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProgramVariables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/robotcontrolapp.RobotControlApp/GetProgramVariables',
            robotcontrolapp__pb2.ProgramVariablesRequest.SerializeToString,
            robotcontrolapp__pb2.ProgramVariable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetProgramVariables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetProgramVariables',
            robotcontrolapp__pb2.SetProgramVariablesRequest.SerializeToString,
            robotcontrolapp__pb2.SetProgramVariablesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableMotors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/EnableMotors',
            robotcontrolapp__pb2.EnableMotorsRequest.SerializeToString,
            robotcontrolapp__pb2.EnableMotorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetErrors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/ResetErrors',
            robotcontrolapp__pb2.ResetErrorsRequest.SerializeToString,
            robotcontrolapp__pb2.ResetErrorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReferenceJoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/ReferenceJoints',
            robotcontrolapp__pb2.ReferenceJointsRequest.SerializeToString,
            robotcontrolapp__pb2.ReferenceJointsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMotionState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/GetMotionState',
            robotcontrolapp__pb2.GetMotionStateRequest.SerializeToString,
            robotcontrolapp__pb2.MotionState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMotionInterpolator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetMotionInterpolator',
            robotcontrolapp__pb2.MotionInterpolatorRequest.SerializeToString,
            robotcontrolapp__pb2.MotionState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLogicInterpolator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetLogicInterpolator',
            robotcontrolapp__pb2.LogicInterpolatorRequest.SerializeToString,
            robotcontrolapp__pb2.MotionState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPositionInterface(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetPositionInterface',
            robotcontrolapp__pb2.PositionInterfaceRequest.SerializeToString,
            robotcontrolapp__pb2.MotionState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/MoveTo',
            robotcontrolapp__pb2.MoveToRequest.SerializeToString,
            robotcontrolapp__pb2.MotionState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TranslateJointToCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/TranslateJointToCart',
            robotcontrolapp__pb2.JointToCartRequest.SerializeToString,
            robotcontrolapp__pb2.JointToCartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TranslateCartToJoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/TranslateCartToJoint',
            robotcontrolapp__pb2.CartToJointRequest.SerializeToString,
            robotcontrolapp__pb2.CartToJointResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIOState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetIOState',
            robotcontrolapp__pb2.IOStateRequest.SerializeToString,
            robotcontrolapp__pb2.IOStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/robotcontrolapp.RobotControlApp/UploadFile',
            robotcontrolapp__pb2.UploadFileRequest.SerializeToString,
            robotcontrolapp__pb2.UploadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/robotcontrolapp.RobotControlApp/DownloadFile',
            robotcontrolapp__pb2.DownloadFileRequest.SerializeToString,
            robotcontrolapp__pb2.DownloadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/ListFiles',
            robotcontrolapp__pb2.ListFilesRequest.SerializeToString,
            robotcontrolapp__pb2.ListFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/RemoveFiles',
            robotcontrolapp__pb2.RemoveFilesRequest.SerializeToString,
            robotcontrolapp__pb2.RemoveFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSystemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/GetSystemInfo',
            robotcontrolapp__pb2.SystemInfoRequest.SerializeToString,
            robotcontrolapp__pb2.SystemInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVelocityOverride(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetVelocityOverride',
            robotcontrolapp__pb2.SetVelocityOverrideRequest.SerializeToString,
            robotcontrolapp__pb2.SetVelocityOverrideResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
