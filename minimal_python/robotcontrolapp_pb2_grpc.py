# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import robotcontrolapp_pb2 as robotcontrolapp__pb2


class RobotControlAppStub(object):
    """****************************************************************************

    Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecieveActions = channel.stream_stream(
                '/robotcontrolapp.RobotControlApp/RecieveActions',
                request_serializer=robotcontrolapp__pb2.AppAction.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.Event.FromString,
                )
        self.GetTCP = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/GetTCP',
                request_serializer=robotcontrolapp__pb2.GetTCPRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.Matrix44.FromString,
                )
        self.GetRobotStateStream = channel.unary_stream(
                '/robotcontrolapp.RobotControlApp/GetRobotStateStream',
                request_serializer=robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.RobotState.FromString,
                )
        self.GetRobotState = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/GetRobotState',
                request_serializer=robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.RobotState.FromString,
                )
        self.GetProgramVariables = channel.unary_stream(
                '/robotcontrolapp.RobotControlApp/GetProgramVariables',
                request_serializer=robotcontrolapp__pb2.ProgramVariablesRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.ProgramVariable.FromString,
                )
        self.SetProgramVariables = channel.unary_unary(
                '/robotcontrolapp.RobotControlApp/SetProgramVariables',
                request_serializer=robotcontrolapp__pb2.SetProgramVariablesRequest.SerializeToString,
                response_deserializer=robotcontrolapp__pb2.SetProgramVariablesResponse.FromString,
                )


class RobotControlAppServicer(object):
    """****************************************************************************

    Interface exported by the server.
    """

    def RecieveActions(self, request_iterator, context):
        """Receives AppActions (see message AppAction, contains app functions and UI updates...)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTCP(self, request, context):
        """Requests the current tool center point
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotStateStream(self, request, context):
        """streams the robot state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotState(self, request, context):
        """Requests the current robot state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProgramVariables(self, request, context):
        """Requests one or more program variables
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProgramVariables(self, request, context):
        """Sets one or more program variables
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RobotControlAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecieveActions': grpc.stream_stream_rpc_method_handler(
                    servicer.RecieveActions,
                    request_deserializer=robotcontrolapp__pb2.AppAction.FromString,
                    response_serializer=robotcontrolapp__pb2.Event.SerializeToString,
            ),
            'GetTCP': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTCP,
                    request_deserializer=robotcontrolapp__pb2.GetTCPRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.Matrix44.SerializeToString,
            ),
            'GetRobotStateStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetRobotStateStream,
                    request_deserializer=robotcontrolapp__pb2.RobotStateRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.RobotState.SerializeToString,
            ),
            'GetRobotState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotState,
                    request_deserializer=robotcontrolapp__pb2.RobotStateRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.RobotState.SerializeToString,
            ),
            'GetProgramVariables': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProgramVariables,
                    request_deserializer=robotcontrolapp__pb2.ProgramVariablesRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.ProgramVariable.SerializeToString,
            ),
            'SetProgramVariables': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProgramVariables,
                    request_deserializer=robotcontrolapp__pb2.SetProgramVariablesRequest.FromString,
                    response_serializer=robotcontrolapp__pb2.SetProgramVariablesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'robotcontrolapp.RobotControlApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RobotControlApp(object):
    """****************************************************************************

    Interface exported by the server.
    """

    @staticmethod
    def RecieveActions(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/robotcontrolapp.RobotControlApp/RecieveActions',
            robotcontrolapp__pb2.AppAction.SerializeToString,
            robotcontrolapp__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTCP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/GetTCP',
            robotcontrolapp__pb2.GetTCPRequest.SerializeToString,
            robotcontrolapp__pb2.Matrix44.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotStateStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/robotcontrolapp.RobotControlApp/GetRobotStateStream',
            robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
            robotcontrolapp__pb2.RobotState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/GetRobotState',
            robotcontrolapp__pb2.RobotStateRequest.SerializeToString,
            robotcontrolapp__pb2.RobotState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProgramVariables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/robotcontrolapp.RobotControlApp/GetProgramVariables',
            robotcontrolapp__pb2.ProgramVariablesRequest.SerializeToString,
            robotcontrolapp__pb2.ProgramVariable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetProgramVariables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robotcontrolapp.RobotControlApp/SetProgramVariables',
            robotcontrolapp__pb2.SetProgramVariablesRequest.SerializeToString,
            robotcontrolapp__pb2.SetProgramVariablesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
